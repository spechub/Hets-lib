library HasCASL/Metatheory/Iteration

from HasCASL/Metatheory/Coproduct get Sums
from HasCASL/Metatheory/Monad get CpoMonad

logic HasCASL

spec Iteration = CpoMonad and Sums then
     vars  m: CpoMonad; a : Cpo
     op    iter: (a --> m Bool) --> (a -->? m a) --> a -->? m a

vars f : a -->? m a

program
     iter test f x = do
        b <- test x ;;
        if b then do
          y <- f x ;;
          iter test f x
          else ret x

     op    while (b : m Bool) (p: m Unit) :? m Unit
           = iter ((\ x . b) as Unit --> m Bool)
                ((\ x . p) as Unit -->? m Unit) ()
