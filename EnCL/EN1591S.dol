library EnCL/EN1591S

logic EnCL

spec FlangeParameter =
 operator d_G1, d_G2, d_4, d_0, d_3, d_2, d_1, d_Be, d_5, A_F, e_G, E_F0, e_1, e_2, e_P, d_Bs, n_B, f_B0, F_A0, M_A0, l_H, Q_maxy, phi_S
end


spec EN1591 =

 . p_B_X := Pi * d_3_X/n_B_X %(eq1_X)%

     %% effective diameter of screw hole
 . d_5e_X := d_5_X * sqrt(d_5_X/p_B_X) %(eq2_X)%

     %% diameter of bolt circle
 . d_3e_X := d_3_X * (1-2/n_B_X^2) %(eq4_X)%

     %% ** Ring

 . b_F_X := (d_4_X - d_0_X)/2 - d_5e %(eq5.1_X)%
 . d_F_X := (d_4_X + d_0_X)/2 %(eq5.2_X)%

 . e_L_X := 0 %(eq6.3)%

 . e_E_X := e_S_X %(eq11.1_X)%
 . d_E_X := d_S_X %(eq11.2_X)%

 . h_P_X := ((d_Ge_X - d_E_X)^2 * (2*d_Ge_X + d_E_X)/6 + 2*e_P_X^2*d_F_X)/d_Ge_X^2 %(eq13_X)%
 . h_G_X := (d_3e_X - d_Ge_X)/2 %(eq14.1_X)%
 . h_H_X := (d_3e_X - d_E_X)/2 %(eq14.2_X)%
 . h_L_X := 0 %(eq14.3_X)%


 . gamma_X := e_E_X * d_F_X/(b_F_X * d_E_X * cos(phi_S_X)) %(eq17_X)%

 . theta_X := 0.55 * cos(phi_S_X) * sqrt(d_E_X * e_E_X)/e_F_X %(eq18_X)%

 . lambda1_X := e_Q_X/e_F_X %(eq19_X)%

 . c_F_X := (1 + gamma_X * theta_X) / (1 + gamma_X * theta_X
            * (4 * (1 - 3 * lambda1_X + 3 * lambda1_X^2) + 6 * (1 - 2 * lambda1_X) * theta_X + 6 * theta_X^2)
            + 3 * gamma_X^2 * theta_X^4) %(eq20_X)%

 . h_S_X := 1.1 * e_F_X * sqrt(e_E_X/d_E_X) * (1 - 2 * lambda1_X + theta_X)/(1 + gamma_X + theta_X) %(eq21_X)%

 . h_T_X := e_F_X * (1 - 2 * lambda1_X - gamma_X * theta_X^2)/(1 + gamma_X * theta_X) %(eq22_X)%

 . h_Q_X := (h_S_X * k_Q_X + h_T_X * (2 * d_F_X * e_P_X/d_E_X^2 - 0.5 * tan(phi_S_X))) * (d_E_X/d_Ge_X)^2 %(eq23_X)%

 . h_R_X := h_S_X * k_R_X - h_T_X * 0.5 * tan(phi_S_X) %(eq24_X)%


     %% fuer Kegel- und Zylinderschale
 . k_Q_X := 0.85/cos(phi_S_X) %(eq25_X)%
 . k_R_X := -(0.15/cos(phi_S_X)) %(eq26_X)%

 . Z_F_X := 3 * d_F_X * c_F_X/(Pi * b_F_X * e_F_X^3) %(eq27.1_X)%
 . Z_L_X := 0 %(eq27.2_X)%


 . b_Gt_X := (d_G2_X - d_G1_X)/2  %(eq35.1_X)%
 . b_Ge_X := min(b_Gi_X, b_Gt_X) %(eq38_X)%
 

 . h_G0_X := (d_3e_X - d_Ge_X)/2 %(eq40_X)%


%% . b_Gi_X := b_Gt_X %(tbl1.1_X)%
%% use the recursion variable
 . b_Gi_X := b_Gi %(tbl1.1_X)%
 . d_Ge_X := d_G2_X - b_Ge_X %(tbl1.4_X)%


     %% distance between screws
 . p_B := Pi * d_3/n_B %(eq1)%

     %% effective diameter of screw hole
 . d_5e := d_5 * sqrt(d_5/p_B) %(eq2)%

     %% diameter of blind hole, we don't have a blind hole
 %% . d_5 := d_5t * l_5t/e_Fb %(eq3)%

     %% diameter of bolt circle
 . d_3e := d_3 * (1-2/n_B^2) %(eq4)%

     %% ** Ring

 . b_F := (d_4 - d_0)/2 - d_5e %(eq5.1)%
 . d_F := (d_4 + d_0)/2 %(eq5.2)%
     %% this is an implicit equation for A_F!
     %%  . e_F := 2 * A_F/(d_4 - d_0) %(eq5.3)%
 . A_F := e_F * (d_4 - d_0) / 2 %(eq5.3)%



 . b_L := 0 %(eq6.1)%
 . d_L := 0 %(eq6.2)%
 . e_L := 0 %(eq6.3)%

     %% * Spheric shell

 %% We need this in eq75
 . beta := e_2/e_1 %(eq9.1)%



%% we have: 4.1.2.2 Flansch ohne Ansatz
 . e_E := e_S %(eq11.1)%
 . d_E := d_S %(eq11.2)%

     %% * 4.1.3 Lever arm

%% @comment
%%  ANMERKUNG Im Falle einer Flachdichtung koennen die unten angegebenen
%%  Parameter $h_P und h_G nur errechnet werden nach Auswertung von $d_Ge,
%%  d. h. nachdem die Berechnungen in 4.3.2 durchgefuehrt wurden.

 . h_P := ((d_Ge - d_E)^2 * (2*d_Ge + d_E)/6 + 2*e_P^2*d_F)/d_Ge^2 %(eq13)%

 . h_G := (d_3e - d_Ge)/2 %(eq14.1)%
 . h_H := (d_3e - d_E)/2 %(eq14.2)%
 . h_L := 0 %(eq14.3)%

     %% * 4.1.4 Elasticity related flange paramters

 . gamma := e_E * d_F/(b_F * d_E * cos(phi_S)) %(eq17)%

 . theta := 0.55 * cos(phi_S) * sqrt(d_E * e_E)/e_F %(eq18)%

 . lambda1 := e_Q/e_F %(eq19)%

 . c_F := (1 + gamma * theta) / (1 + gamma * theta * (4 * (1 - 3 * lambda1 + 3 * lambda1^2) + 6 * (1 - 2 * lambda1) * theta + 6 * theta^2) + 3 * gamma^2 * theta^4)%(eq20)%

 . h_S := 1.1 * e_F * sqrt(e_E/d_E) * (1 - 2 * lambda1 + theta)/(1 + gamma + theta) %(eq21)%

 . h_T := e_F * (1 - 2 * lambda1 - gamma * theta^2)/(1 + gamma * theta) %(eq22)%

 . h_Q := (h_S * k_Q + h_T * (2 * d_F * e_P/d_E^2 - 0.5 * tan(phi_S))) * (d_E/d_Ge)^2 %(eq23)%

 . h_R := h_S * k_R - h_T * 0.5 * tan(phi_S) %(eq24)%

     %% fuer Kegel- und Zylinderschale
 . k_Q := 0.85/cos(phi_S) %(eq25)%
 . k_R := -(0.15/cos(phi_S)) %(eq26)%

 . Z_F := 3 * d_F * c_F/(Pi * b_F * e_F^3) %(eq27.1)%
 . Z_L := 0 %(eq27.2)%

     %% * 4.2 Schrauben-Parameter

 . l_e := l_B - l_s %(eq.34.prelim)%

 . A_B := min(d_Be,d_Bs)^2 * n_B * Pi/4 %(eq33)%
 . X_B := (l_s/d_Bs^2 + l_e/d_Be^2 + 0.8/d_B0) * 4/(n_B * Pi) %(eq34)%

     %% * 4.3 Dichtungs-Parameter

 . b_Gt := (d_G2 - d_G1)/2  %(eq35.1)%
 . d_Gt := (d_G2 + d_G1)/2 %(eq35.2)%
 . A_Gt := Pi * d_Gt * b_Gt %(eq36)%

     %% Zu Beginn der Berechnung ist der Wert, den man fuer F_G0 einsetzt,
     %% nicht entscheidend. Es wird folgender realistischer Wert empfohlen.

%% COMMENT: wird schon unterhalb von eq 53 gesetzt!
 %% . F_G[I=0] := A_B * f_B/3 - F_R %(eq37)%

     %% CONTROL: Iteration
%% Gleichungen (38) bis (40) werden so lange iterativ ausgewertet,
%% bis der Wert bGe innerhalb der erforderlichen Genauigkeit konstant bleibt.
%% ANMERKUNG 4 Eine Genauigkeit von 5% ist ausreichend.
%% Um ein Ergebnis zu erreichen, das vom Anwender unabhaengig ist,
%% wird eine Genauigkeit von 0,1% empfohlen.



   %% Table 1 only for gasket type 1:
   %% Erste Naeherung
 . b_Gi := b_Gt %(tbl1.1)%

 . b_Ge := min(b_Gi, b_Gt) %(eq38)%
 
 . X_G := (e_G/A_Gt) * (b_Gt + e_G/2)/(b_Ge + e_G/2) %(eq42)%

 . d_Ge := d_G2 - b_Ge %(tbl1.4)%

 . h_G0 := (d_3e - d_Ge)/2 %(eq40)%

 . A_Ge := Pi * d_Ge * b_Ge %(eq39)%


%% Genauer
%% Z_F, Z_F~ nach Gleichung (27)

 . E_Gm := E_0 + 0.5 * K_1 * F_G/A_Ge %(tbl1.3)%


%% * 5 Interne Kraefte (in der Verbindung)

%% * 5.1 Belastungen
  . F_Q := (Pi/4) * d_Ge^2 * P %(eq43)%


   . F_R := 0 %(eq44)%
%% In Gleichung (44) ist das Vorzeichen fuer die unguenstigere Bedingung zu waehlen.
%% . F_RI := F_AI + (4/d_3e) * M_AI %(eq44.1)%
%% . F_RI := F_AI - (4/d_3e) * M_AI %(eq44.2)%
%% Es wird empfohlen, in jedem Fall 2 Belastungszustaende
%% mit unterschiedlichen Kennzahlen I (einen fuer jedes
%% Vorzeichen in Gleichung (44)) zu beruecksichtigen, sobald ein Aeusseres
%% Moment aufgebracht wird.


 . e_B := e_Ft + e_Ft_X + e_L + e_L_X + e_G %(eq45.prelim)%


%% 
 . DeltaU := e_B * alpha_B * (T_B - T_0) - e_Ft * alpha_F * (T_F - T_0)
 - e_L * alpha_L * (T_L - T_0) - e_G * alpha_G * (T_G - T_0)
 - e_Ft_X * alpha_F_X * (T_F_X - T_0)
 - e_L_X * alpha_L_X * (T_L_X - T_0) %(eq45.1)%

%% CHECK: Anmerkung zu Gleichungen (46) bis (48)
 . Y_G := Z_F * h_G^2/E_F + Z_F_X * h_G_X^2/E_F_X
   + Z_L * h_L^2/E_L + Z_L_X * h_L_X^2/E_L_X + X_B/E_B + X_G/(E_G * g_C) %(eq46)%

 . Y_Q := Z_F * h_G * (h_H - h_P + h_Q)/E_F +  Z_F_X * h_G_X * (h_H_X
   - h_P_X + h_Q_X)/E_F_X + Z_L * h_L^2/E_L + Z_L_X * h_L_X^2/E_L_X
   + X_B/E_B %(eq47)%

 %% Gleichung (48) wird nur fuer Belastungszustaende mit F_RI != 0 ausgewertet.
  %% eventually work with [I>0] here
 . Y_R := Z_F * h_G * (h_H + h_R)/E_F +  Z_F_X * h_G_X * (h_H_X
   + h_R_X)/E_F_X + Z_L * h_L^2/E_L + Z_L_X * h_L_X^2/E_L_X + X_B/E_B %(eq48)%

%% * 5.3 Mindestkraefte fuer die Dichtung

 . F_Gmin := A_Ge * Q_min %(eq49)%
  %% eventually work with [I>0] here
 %% . F_Gmin := max(A_Ge * Q, -(F_Q + F_R)) %(eq50)%

%% * 5.4 Interne Kraefte im Montagezustand
 . F_GDeltaTemp := F_Gmin * Y_G + F_Q * Y_Q  + DeltaU  %(eq51.prelim1)%

 . F_GDelta := 0  %(eq51)%

 . F_G0req := max(F_Gmin, F_GDelta) %(eq52)%
 . F_B0req := F_G0req + F_R %(eq53)%


%% Falls F_G0req nach Gleichung (52) groesser als der bisher angenommene Wert
%% fuer F_G0 ist, wird die Berechnung ab Gleichung (38) wiederholt,
%% wobei der hoehere Wert von F_G0 benutzt wird, bis gilt

 . repeat
    . repeat

       . b_Gi := sqrt(e_G/(Pi * d_Ge * E_Gm)/(h_G0 * Z_F/E_F0 + h_G0_X * Z_F_X/E_F0_X)
                    + (F_G / (Pi * d_Ge * Q_maxy))^2) %(test)%

     until convergence(0.05, b_Ge)

   until convergence(0.05, F_G) and abs(F_G0req) <= abs(F_G) %(eq54)%


%% Der tatsaechliche Wert F_G0req kann durch Iteration gefunden werden derart, dass
%% F_G0 ungefaehr gleich F_G0req (55)
%% innerhalb der geforderten Genauigkeit gilt.
%% ANMERKUNG Eine Genauigkeit von 5% ist ausreichend, wobei F_G0 groesser F_G0req ist.
%% Um ein Ergebnis zu erreichen, das vom Anwender nahezu unabhaengig ist,
%% ist eine Genauigkeit von 0,1% erforderlich.

     %% * 5.4.2 Beruecksichtigung der Streuung der Schraubenkraft bei der Montage
     %% Im folgenden gelten entweder die Gleichungen 56, oder 57 und 58, je nachdem
     %% ob der systematische Fehler K_s durch die Ungenauigkeit des Schrauben-Anziehens
     %% bekannt ist oder nicht.

%% . epsilon_plus := K_s + (epsilon_1plus - K_s)/sqrt(n_B) %(eq56a)%
%% . epsilon_minus := K_s + (epsilon_1minus - K_s)/sqrt(n_B) %(eq56b)%

 . K_s := 0.25 * epsilon_1plus    %(eq57)%
     %% SIMP: we use the equation above
 %% . K_s := 0.25 * epsilon_1minus %(eq57b)%

  %% Error in the standard for equations 56ff : n_b means n_B.

 . epsilon_plus := epsilon_1plus * (1 + 3/sqrt(n_B))/4 %(eq58a)%
 . epsilon_minus := epsilon_1minus * (1 + 3/sqrt(n_B))/4 %(eq58b)%

 %% Apendix D: screw tightening with torque measuring

 . F_B0nom := n_B * M_tnom / k_B  %(eqD.2)%

 . k_B := 0.16 * p_t + 1.17 * mu * d_B0  %(eqD.5)%


 . F_B0min := F_B0nom * (1 - epsilon_minus) %(eq60)%
 . F_B0max := F_B0nom * (1 + epsilon_plus) %(eq61)%

 %% a) Nenn-Schraubenkraft im Montagezustand, zur Festlegung der Schrauben-Anziehparameter

     %% ohne Messung, F_B0nom auf F_B0av setzen, und epsilon_minus auf 0.5, dann kommt eq63 zum Tragen
%% . F_B0nom := F_B0av >= F_B0req/(1 - epsilon_minus)  %(eq64)%

     %% b) Maximale Schraubenkraft im Montagezustand, zur Berechnung der Belastungsgrenze (Abschnitt 5):


 . F_G0max := F_B0max - F_R %(eq66)%
     %% Die effektive Dichtungsbreite bGe muss in diesem Stadium der Berechnung nicht neu berechnet werden.

 . F_G0d := max(F_GDelta, (2/3) * (1 - 10/N_R) * F_B0max - F_R) %(eq67)%

 . F_G := (F_G0d*Y_G - (F_Q*Y_Q + F_R*Y_R - F_R*Y_R+DeltaU))/Y_G %(eq68)%

 . F_B := F_G + F_Q + F_R %(eq69)%
     %% * 6 Ueberpruefung der zulaessigen Belastungsgrenzen

     %% Parameter fuer breite Flansche, keine Nummer vergeben!
 . Xi := d_4/d_0 %(eq70_unnamed.3)%

     %% Fuer Xi > 2 anstelle von Phi_max := 1 muss gelten

 . Phi_max := min(1, 0.6 + 1/sqrt(5.25 + (Xi - 1)^2)) %(eq70)%

     %% * 6.2 Schrauben


%% from Formelzeichen (REVIEW)
 . I_B := Pi/12 * min(d_Be, d_Bs)^3 %(eq71.prelim)%

 . Phi_B := 1/f_B * sqrt( (F_B/A_B)^2 + 3*(C* M_tB/I_B)^2) %(eq71.1)%

     %% CONTROL: Cases (C)
     %% C haengt vom Zustand I und vom Schraubenwerkstoff ab, und ist fuer I > 0 Null.
     %% Das heisst z.B. auch, dass M_t.B fuer I > 0 nicht relevant ist!


 . M_tBnom := (0.16 * p_t + 0.52 * mu * d_B0) * F_B0nom / n_B   %(eqD.9)%

   %% Bei hydraulischen Drehmomentschrauben
   %% . M_t.B := 0 %(eq71_unnamed.1)%

   %% has only to be defined for I=0, otherwise it is eliminated from eq71 by the factor C.
 . M_tB := M_tBmax %(eq71_unnamed.1)%
 . M_tBmax := M_tBnom * (1 + epsilon_plus) %(eq71_unnamed.2)%



     %% * 6.3 Dichtung, REVIEW (abs introduced for negative force values)
 . Phi_G := abs(F_G/(A_Gt * Q_max)) %(eq72)%

     %% * 6.4 Integrierter Flansch
 . Phi_F := abs(F_G * h_G + F_Q * (h_H - h_P) + F_R * h_H)/W_F(k_M, Psi_Z) %(eq73)%

     %% EFFECT: shadowing auf Psi_Z, da Psi_Z nicht als veraenderliche declariert
 . W_F(k_M', Psi_Z') :=
     (Pi/4) * (f_F * 2 * b_F * e_F^2 * (1 + 2 * Psi_opt * Psi_Z' - Psi_Z'^2)
               + f_E * d_E * e_D^2 * c_M * j_M * k_M') %(eq74)%

 . d_1 := d_0 + e_2 - e_1/2 %(eq75.prelim)%

 . e_D := e_1 * (1 + (beta - 1) * l_H/fthrt((beta/3)^4 * (d_1*e_1)^2 + l_H^4)) %(eq75)%
 . f_E := min(f_F, f_S) %(eq76)%
 . delta_Q := P * d_E/(f_E * 2 * e_D * cos(phi_S)) %(eq77.1)%
 . delta_R := F_R/(f_E * Pi * d_E * e_D * cos(phi_S)) %(eq77.2)%
     %% fuer Kegel- und Zylinderschale
     %% EXCEPTION: Wird der Wert unter der Wurzel negativ, ist der Hals Ueberlastet.
 . c_M := sqrt(1.33 * (1 - 0.75*(0.5*delta_Q + delta_R)^2) * (1 - (0.75*delta_Q^2 + delta_R^2))) %(eq78)%

 vars j_S in {-1, 1}; k_M' in [-1, 1]; k_S in [0, 1]

 . c_S(j_S) := Pi/4*(sqrt(1 - 0.75*(0.5*delta_Q + delta_R)^2) + j_S * (0.5*delta_R - 0.75*delta_Q)) %(eq79)%

 . j_M := sign(F_G * h_G + F_Q * (h_H - h_P) + F_R * h_H) %(eq80.1)%


 . Psi(j_S, k_M', k_S) := f_E * d_E * e_D * cos(phi_S)/(f_F * 2 * b_F * e_F) * ((0.5*delta_Q+delta_R) * tan(phi_S) - delta_Q * 2 * e_P/d_E + j_S * k_S * sqrt(e_D*c_M*c_S(j_S)*(1+j_S*k_M')/(d_E*cos(phi_S)^3))) %(eq82)%

 . Psi_opt := j_M * (2*e_P/e_F-1) %(eq83.1)%

 . Psi_0 := Psi(0, 0, 0) %(eq84.1)%
 . Psi_max := Psi(1, 1, 1) %(eq84.2)%
 . Psi_min := Psi(-1, -1, 1) %(eq84.3)%


 . case j_M = 1:
    . case Psi_max <= Psi_opt:
           . k_M := 1 %(test)%
           . Psi_Z := Psi_max 
      case Psi_0 <= Psi_opt and Psi_opt < Psi_max:
           . k_M := 1
           . Psi_Z := Psi_opt
      case Psi_opt < Psi_0:
           . k_M := maxloc(W_F(x, Psi(-1, x, 1)), x, -1, 1)
           . Psi_Z := Psi(-1, k_M, 1)
      end
   case j_M = -1:
    . case Psi_opt <= Psi_min:
           . k_M := -1   . Psi_Z := Psi_min
      case Psi_min < Psi_opt and Psi_opt <= Psi_0:
           . k_M := -1  . Psi_Z := Psi_opt
      case Psi_0 < Psi_opt:
           . k_M := maxloc(W_F(x, Psi(1, x, 1)), x, -1, 1)
           . Psi_Z := Psi(1, k_M, 1)
      end
   end

   . print(approx(Phi_max, 4))
   . print(approx(Phi_B, 4))
   . print(approx(Phi_F, 4))
   . print(approx(Phi_G, 4))

end

spec EN1591Correctness = EN1591 then
  . Phi_F <= Phi_max
end
