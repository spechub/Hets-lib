%% from CASL user manual

spec Strict_Partial_Order =
%% Let's start with a simple example !
    sort Elem
    pred __<__ : Elem * Elem
	 %% pred abbreviates predicate
    forall x, y, z:Elem
    . not (x < x) %(strict)%
    . (x < y) => not (y < x) %(asymmetric)%
    . (x < y) /\ (y < z) => (x < z) %(transitive)%
    %{ Note that there may exist x, y such that
       neither x < y nor y < x. }%
end

spec Total_Order =
    Strict_Partial_Order
then
    forall x, y:Elem
    . (x < y) \/ (y < x) \/ x = y %(total)%
end

spec Partial_Order =
    Strict_Partial_Order
then
    pred __<=__(x, y :Elem) <=> (x < y) \/ x = y
end

spec Partial_Order_1 =
    Partial_Order
then %implies
    forall x, y, z:Elem
    . (x <= y) /\ (y <= z) => (x <= z) %(transitive)%
end

spec Implies_Does_Not_Hold =
    Partial_Order
then %implies
    forall x, y:Elem
    . (x < y) \/ (y < x) \/ x = y %(total)%
end
