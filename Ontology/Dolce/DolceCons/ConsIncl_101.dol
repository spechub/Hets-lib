spec source_101 =
sort APO, F, MOB, NAPO, SAG, T
op eternal_object[APO] : APO
op eternal_object[F] : F
op eternal_object[SAG] : SAG
pred At : T
pred AtP : T * T
pred Dif : T * T * T
pred Ov : T * T
pred P : T * T
pred PP : T * T
pred PRE : APO * T
pred PRE : F * T
pred PRE : MOB * T
pred PRE : NAPO * T
pred PRE : SAG * T
pred SD : MOB * APO
pred Sum : T * T * T
pred tDif : APO * APO * APO
pred tDif : F * F * F
pred tDif : MOB * MOB * MOB
pred tDif : NAPO * NAPO * NAPO
pred tDif : SAG * SAG * SAG
pred tOv : APO * APO * T
pred tOv : F * F * T
pred tOv : MOB * MOB * T
pred tOv : NAPO * NAPO * T
pred tOv : SAG * SAG * T
pred tP : APO * APO * T
pred tP : F * F * T
pred tP : MOB * MOB * T
pred tP : NAPO * NAPO * T
pred tP : SAG * SAG * T
pred tPP : APO * APO * T
pred tPP : F * F * T
pred tPP : MOB * MOB * T
pred tPP : NAPO * NAPO * T
pred tPP : SAG * SAG * T
pred tSum : APO * APO * APO
pred tSum : F * F * F
pred tSum : MOB * MOB * MOB
pred tSum : NAPO * NAPO * NAPO
pred tSum : SAG * SAG * SAG

forall t : T . PRE(eternal_object[F], t) %(eternal_object)%
forall t : T . PRE(eternal_object[SAG], t) %(eternal_object_75)%
forall t : T . PRE(eternal_object[APO], t) %(eternal_object_45)%

forall x, y : T . not P(x, y) => exists z : T . Dif(z, x, y)
                    %(Extensionality+existence of the difference)%

forall x, y : T . exists z : T . Sum(z, x, y)
                                          %(Existence of the sum)%

forall x : T; y : T . PP(x, y) <=> P(x, y) /\ not P(y, x) %(Dd14)%

forall x : T; y : T
. Ov(x, y) <=> exists z : T . P(z, x) /\ P(z, y)          %(Dd15)%

forall x : T . At(x) <=> not exists y : T . PP(y, x) %(Dd16)%

forall x : T; y : T . AtP(x, y) <=> P(x, y) /\ At(x) %(Dd17)%

forall z : T; x : T; y : T
. Sum(z, x, y) <=> forall w : T . Ov(w, z) <=> Ov(w, x) \/ Ov(w, y)
                                                           %(Ax5)%

forall z : T; x : T; y : T
. Dif(z, x, y)
  <=> forall w : T . P(w, z) <=> P(w, x) /\ not Ov(w, y)   %(Ax6)%

forall x, y, z : T . P(x, x) %(reflexivity)%

forall x, y, z : T . P(x, y) /\ P(y, x) => x = y %(antisymmetry)%

forall x, y, z : T . P(x, y) /\ P(y, z) => P(x, z) %(transitivity)%

forall z : F; x : F; y : F
. tSum(z, x, y)
  <=> forall w : F; t : T
      . tOv(w, z, t) <=> tOv(w, x, t) \/ tOv(w, y, t)      %(Ax1)%

forall z : F; x : F; y : F
. tDif(z, x, y)
  <=> forall w : F; t : T
      . tP(w, z, t) <=> tP(w, x, t) /\ not tOv(w, y, t)    %(Ax2)%

forall x, y : F; t : T
. PRE(x, t) /\ PRE(y, t) /\ not tP(x, y, t)
  => exists z : F . tP(z, x, t) /\ not tOv(z, y, t)        %(Ax3)%

forall x, y : F; t : T . exists z : F . tSum(z, x, y)
                                    %(Existence of the sum_18_19)%

forall x : F; y : F; t : T
. tPP(x, y, t) <=> tP(x, y, t) /\ not tP(y, x, t)        %(Ax1_5)%

forall x : F; y : F; t : T
. tOv(x, y, t) <=> exists z : F . tP(z, x, t) /\ tP(z, y, t)
                                                         %(Ax2_6)%

forall x1 : F; x2 : F; t : T
. tP(x1, x2, t) => PRE(x1, t) /\ PRE(x2, t)              %(Ax1_3)%

forall x : F . exists t : T . PRE(x, t) %(Ax1_14)%

forall x1 : F; x2 : F; t1, t2 : T
. tP(x1, x2, t1) /\ P(t2, t1) => tP(x1, x2, t2)         %(Ax1_15)%

forall x, y, z : F; t : T . PRE(x, t) => tP(x, x, t) %(Ax1_27)%

forall x, y, z : F; t : T
. tP(x, y, t) /\ tP(y, z, t) => tP(x, z, t)              %(Ax2_4)%

forall x : F; t1, t2 : T . PRE(x, t1) /\ P(t2, t1) => PRE(x, t2)
                                                         %(Ax1_2)%

forall y : NAPO; t : T . not PRE(y, t) \/ exists x : F . PRE(x, t)
                                                     %(Ax1_24_29)%

forall x : F; t : T
. At(t) /\ PRE(x, t) => exists y : NAPO . PRE(y, t)     %(Ax2_27)%

forall x : NAPO . exists t : T . PRE(x, t) %(Ax1_14_25_26)%

forall x : NAPO; t1, t2 : T . PRE(x, t1) /\ P(t2, t1) => PRE(x, t2)
                                                      %(Ax1_2_15)%

forall z : NAPO; x : NAPO; y : NAPO
. tSum(z, x, y)
  <=> forall w : NAPO; t : T
      . tOv(w, z, t) <=> tOv(w, x, t) \/ tOv(w, y, t)
                                                     %(Ax1_24_33)%

forall z : NAPO; x : NAPO; y : NAPO
. tDif(z, x, y)
  <=> forall w : NAPO; t : T
      . tP(w, z, t) <=> tP(w, x, t) /\ not tOv(w, y, t) %(Ax2_31)%

forall x, y : NAPO; t : T
. PRE(x, t) /\ PRE(y, t) /\ not tP(x, y, t)
  => exists z : NAPO . tP(z, x, t) /\ not tOv(z, y, t)  %(Ax3_34)%

forall x, y : NAPO; t : T . exists z : NAPO . tSum(z, x, y)
                                       %(Existence of the sum_41)%

forall x : NAPO; y : NAPO; t : T
. tPP(x, y, t) <=> tP(x, y, t) /\ not tP(y, x, t)     %(Ax1_5_30)%

forall x : NAPO; y : NAPO; t : T
. tOv(x, y, t) <=> exists z : NAPO . tP(z, x, t) /\ tP(z, y, t)
                                                      %(Ax2_6_33)%

forall x1 : NAPO; x2 : NAPO; t : T
. tP(x1, x2, t) => PRE(x1, t) /\ PRE(x2, t)           %(Ax1_3_29)%

forall x1 : NAPO; x2 : NAPO; t1, t2 : T
. tP(x1, x2, t1) /\ P(t2, t1) => tP(x1, x2, t2)      %(Ax1_15_26)%

forall x, y, z : NAPO; t : T . PRE(x, t) => tP(x, x, t)
                                                     %(Ax1_27_28)%

forall x, y, z : NAPO; t : T
. tP(x, y, t) /\ tP(y, z, t) => tP(x, z, t)           %(Ax2_4_32)%

forall z : SAG; x : SAG; y : SAG
. tSum(z, x, y)
  <=> forall w : SAG; t : T
      . tOv(w, z, t) <=> tOv(w, x, t) \/ tOv(w, y, t)   %(Ax1_38)%

forall z : SAG; x : SAG; y : SAG
. tDif(z, x, y)
  <=> forall w : SAG; t : T
      . tP(w, z, t) <=> tP(w, x, t) /\ not tOv(w, y, t) %(Ax2_53)%

forall x, y : SAG; t : T
. PRE(x, t) /\ PRE(y, t) /\ not tP(x, y, t)
  => exists z : SAG . tP(z, x, t) /\ not tOv(z, y, t)   %(Ax3_60)%

forall x, y : SAG; t : T . exists z : SAG . tSum(z, x, y)
                                 %(Existence of the sum_18_19_69)%

forall x : SAG; y : SAG; t : T
. tPP(x, y, t) <=> tP(x, y, t) /\ not tP(y, x, t)     %(Ax1_5_51)%

forall x : SAG; y : SAG; t : T
. tOv(x, y, t) <=> exists z : SAG . tP(z, x, t) /\ tP(z, y, t)
                                                      %(Ax2_6_58)%

forall x1 : SAG; x2 : SAG; t : T
. tP(x1, x2, t) => PRE(x1, t) /\ PRE(x2, t)           %(Ax1_3_49)%

forall x : SAG . exists t : T . PRE(x, t) %(Ax1_14_39)%

forall x1 : SAG; x2 : SAG; t1, t2 : T
. tP(x1, x2, t1) /\ P(t2, t1) => tP(x1, x2, t2)      %(Ax1_15_41)%

forall x, y, z : SAG; t : T . PRE(x, t) => tP(x, x, t)
                                                     %(Ax1_27_46)%

forall x, y, z : SAG; t : T
. tP(x, y, t) /\ tP(y, z, t) => tP(x, z, t)           %(Ax2_4_56)%

forall x : SAG; t1, t2 : T . PRE(x, t1) /\ P(t2, t1) => PRE(x, t2)
                                                      %(Ax1_2_43)%

forall y : APO; t : T . not PRE(y, t) \/ exists x : SAG . PRE(x, t)
                                                  %(Ax1_24_29_44)%

forall x : SAG; t : T
. At(t) /\ PRE(x, t) => exists y : APO . PRE(y, t)   %(Ax2_27_54)%

forall x : APO . exists t : T . PRE(x, t) %(Ax1_14_25_26_40)%

forall x : APO; t1, t2 : T . PRE(x, t1) /\ P(t2, t1) => PRE(x, t2)
                                                   %(Ax1_2_15_48)%

forall z : APO; x : APO; y : APO
. tSum(z, x, y)
  <=> forall w : APO; t : T
      . tOv(w, z, t) <=> tOv(w, x, t) \/ tOv(w, y, t)
                                                  %(Ax1_24_33_45)%

forall z : APO; x : APO; y : APO
. tDif(z, x, y)
  <=> forall w : APO; t : T
      . tP(w, z, t) <=> tP(w, x, t) /\ not tOv(w, y, t)
                                                     %(Ax2_31_55)%

forall x, y : APO; t : T
. PRE(x, t) /\ PRE(y, t) /\ not tP(x, y, t)
  => exists z : APO . tP(z, x, t) /\ not tOv(z, y, t)
                                                     %(Ax3_34_61)%

forall x, y : APO; t : T . exists z : APO . tSum(z, x, y)
                                    %(Existence of the sum_41_70)%

forall x : APO; y : APO; t : T
. tPP(x, y, t) <=> tP(x, y, t) /\ not tP(y, x, t)  %(Ax1_5_30_52)%

forall x : APO; y : APO; t : T
. tOv(x, y, t) <=> exists z : APO . tP(z, x, t) /\ tP(z, y, t)
                                                   %(Ax2_6_33_59)%

forall x1 : APO; x2 : APO; t : T
. tP(x1, x2, t) => PRE(x1, t) /\ PRE(x2, t)        %(Ax1_3_29_50)%

forall x1 : APO; x2 : APO; t1, t2 : T
. tP(x1, x2, t1) /\ P(t2, t1) => tP(x1, x2, t2)   %(Ax1_15_26_42)%

forall x, y, z : APO; t : T . PRE(x, t) => tP(x, x, t)
                                                  %(Ax1_27_28_47)%

forall x, y, z : APO; t : T
. tP(x, y, t) /\ tP(y, z, t) => tP(x, z, t)        %(Ax2_4_32_57)%

forall y : APO; t : T . not PRE(y, t) \/ exists x : MOB . PRE(x, t)
                                                     %(Ax1_38_51)%

forall x : MOB; y : APO
. SD(x, y)
  <=> (exists t : T . PRE(x, t))
      /\ forall t : T . PRE(x, t) => PRE(y, t)        %(Ax1_2_40)%

forall x : MOB . exists y : APO . SD(x, y) %(Ax2_43)%

forall x : MOB; t1, t2 : T . PRE(x, t1) /\ P(t2, t1) => PRE(x, t2)
                                                       %(Ax1_2_3)%

forall z : MOB; x : MOB; y : MOB
. tSum(z, x, y)
  <=> forall w : MOB; t : T
      . tOv(w, z, t) <=> tOv(w, x, t) \/ tOv(w, y, t)
                                                     %(Ax1_38_55)%

forall z : MOB; x : MOB; y : MOB
. tDif(z, x, y)
  <=> forall w : MOB; t : T
      . tP(w, z, t) <=> tP(w, x, t) /\ not tOv(w, y, t) %(Ax2_45)%

forall x, y : MOB; t : T
. PRE(x, t) /\ PRE(y, t) /\ not tP(x, y, t)
  => exists z : MOB . tP(z, x, t) /\ not tOv(z, y, t)   %(Ax3_48)%

forall x, y : MOB; t : T . exists z : MOB . tSum(z, x, y)
                                       %(Existence of the sum_55)%

forall x : MOB; y : MOB; t : T
. tPP(x, y, t) <=> tP(x, y, t) /\ not tP(y, x, t)     %(Ax1_5_44)%

forall x : MOB; y : MOB; t : T
. tOv(x, y, t) <=> exists z : MOB . tP(z, x, t) /\ tP(z, y, t)
                                                      %(Ax2_6_47)%

forall x1 : MOB; x2 : MOB; t : T
. tP(x1, x2, t) => PRE(x1, t) /\ PRE(x2, t)           %(Ax1_3_43)%

forall x : MOB . exists t : T . PRE(x, t) %(Ax1_14_39_41)%

forall x1 : MOB; x2 : MOB; t1, t2 : T
. tP(x1, x2, t1) /\ P(t2, t1) => tP(x1, x2, t2)      %(Ax1_15_40)%

forall x, y, z : MOB; t : T . PRE(x, t) => tP(x, x, t)
                                                     %(Ax1_27_42)%

forall x, y, z : MOB; t : T
. tP(x, y, t) /\ tP(y, z, t) => tP(x, z, t)           %(Ax2_4_46)%
end


spec target_101 = source_101
then %cons
sorts POB
sorts APO, NAPO < POB
op eternal_object[POB] : POB
pred PRE : POB * T
pred tOv : POB * POB * T
pred tP : POB * POB * T
pred tPP : POB * POB * T

forall t : T . PRE(eternal_object[POB], t) %(eternal_object_99)%

forall x : POB . not (x in APO /\ x in NAPO)
                                    %(ga_disjoint_sorts_APO_NAPO)%

%% free
generated type POB ::= sort APO | sort NAPO   %(ga_generated_POB)%

forall x : POB; y : POB; t : T
. tPP(x, y, t) <=> tP(x, y, t) /\ not tP(y, x, t)   %(Ax1_79_119)%

forall x : POB; y : POB; t : T
. tOv(x, y, t) <=> exists z : POB . tP(z, x, t) /\ tP(z, y, t)
                                                        %(Ax2_85)%

forall x1 : POB; x2 : POB; t : T
. tP(x1, x2, t) => PRE(x1, t) /\ PRE(x2, t)           %(Ax1_3_84)%

forall x : POB . exists t : T . PRE(x, t) %(Ax1_14_80_85)%

forall x1 : POB; x2 : POB; t1, t2 : T
. tP(x1, x2, t1) /\ P(t2 : T, t1 : T) => tP(x1, x2, t2)
                                                     %(Ax1_15_81)%

forall x, y, z : POB; t : T . PRE(x, t) => tP(x, x, t)
                                                     %(Ax1_27_83)%

forall x, y, z : POB; t : T
. tP(x, y, t) /\ tP(y, z, t) => tP(x, z, t)           %(Ax2_4_86)%

forall x : POB; t1, t2 : T
. PRE(x, t1) /\ P(t2 : T, t1 : T) => PRE(x, t2)       %(Ax1_2_82)%
end

%% use binary sum of temp parthoods
%% source esort APO, F, MOB, NAPO, SAG, T -> sorts APO, F, MOB, NAPO, SAG, T
%% target 

from  Ontology/Dolce/DolceCons/DolceConsParts get TempParthoodBinarySum

spec sp =
  source_101
then %cons
{
   TempParthoodBinarySum [sorts POB,APO,NAPO fit left |-> APO, right |-> NAPO, sum |-> POB]
then 
op eternal_object[APO] : POB
}
end

view v : target_101 to sp = eternal_object[POB] |-> eternal_object[APO] 
end

%% goes through
%% link is mono
