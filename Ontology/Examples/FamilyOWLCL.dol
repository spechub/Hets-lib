library DL/Family

logic OWL

ontology FamilySkel =
     Class: Person
     Class: Female
     Class: Woman EquivalentTo: Person and Female
     Class: Man EquivalentTo:   Person and not Female
	    DisjointWith: Woman
     ObjectProperty: hasHusband
     Class: Wife    EquivalentTo: Woman and hasHusband some Man
end

ontology FamilyBase =
  Class: Person
  Class: Female
  Class: Woman   EquivalentTo: Person and Female
  Class: Man     EquivalentTo: Person and not Female

  ObjectProperty: hasChild
  ObjectProperty: hasHusband

  Class: Mother  EquivalentTo: Woman and hasChild some Person
  Class: Father  EquivalentTo: Man and hasChild some Person
  Class: Parent  EquivalentTo: Father or Mother
  Class: Grandmother            EquivalentTo: Mother and hasChild some Parent
  Class: MotherWithManyChildren EquivalentTo: Mother and (hasChild min 3)
  Class: MotherWithoutDaughter  EquivalentTo: Mother and (hasChild only (not Woman))
  Class: Wife    EquivalentTo: Woman and hasHusband some Man
  Class: Hybird  EquivalentTo: Man and Woman
  Class: Married
  Class: MarriedMother EquivalentTo: Mother and Married 
         SubClassOf: Female and Person
  Individual: mary Types: Mother
    Facts: 
        hasChild  john
  Individual: john Types: Father
    Facts: 
        hasChild  clara
  Individual: clara
end

view v1 : {FamilySkel with logic OWL22CommonLogic} to {FamilyBase with logic OWL22CommonLogic}

ontology NotConser =
     FamilyBase
then %cons
   Class: MotherWithManyChildren EquivalentTo: Mother and (hasChild max 2)
   Class: Hybrid  EquivalentTo: Woman and not Man
   Individual: mary Types: Grandmother
end

ontology Conser =
     FamilyBase
then %cons
     Class: Animal

     ObjectProperty: likesBones

     Class: Dog SubClassOf: likesBones some Animal
end

ontology Family =
FamilyBase
then %implies
  Class: Mother SubClassOf: Parent
   Individual: mary Types: Grandmother
  Class: Man
   EquivalentTo: Woman
end

logic CommonLogic

ontology LittleFamily = 
     FamilyBase
then
.    (forall (a b c) (iff (oneChildFamily a b c)
                          (and (Mother a)  
                               (Father b)
                               (hasHusband a b) 
                               (hasChild a c)
                               (hasChild b c)
                               (forall (x) (if (and (hasChild a x) (hasChild b x)) (= c x)))
                          )))
end
